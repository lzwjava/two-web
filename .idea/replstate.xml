<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1401189372776">{:repl-history {:ide [], :local [&quot;(defn shortenUrl [url]\n  (let [jsonStr (client/get \&quot;https://api.weibo.com/2/short_url/shorten.json\&quot;\n                         {:query-params {\&quot;access_token\&quot; \&quot;2.00_hkjqB7sDeMB60016c93a90cPv4H\&quot;\n                                         \&quot;url_long\&quot;  url}})\n        body (:body jsonStr)\n        short (json/parse-string body)])\n  short)&quot; &quot;(defn shortenUrl [url]\n  (let [jsonStr (client/get \&quot;https://api.weibo.com/2/short_url/shorten.json\&quot;\n                         {:query-params {\&quot;access_token\&quot; \&quot;2.00_hkjqB7sDeMB60016c93a90cPv4H\&quot;\n                                         \&quot;url_long\&quot;  url}})\n        body (:body jsonStr)\n        jsonBody (json/parse-string body)\n        urls (\&quot;urls\&quot; jsonBody)\n        short ( \&quot;url_short\&quot; urls)]\n    short))&quot; &quot;(defn shortenUrl [url]\n  (let [jsonStr (client/get \&quot;https://api.weibo.com/2/short_url/shorten.json\&quot;\n                         {:query-params {\&quot;access_token\&quot; \&quot;2.00_hkjqB7sDeMB60016c93a90cPv4H\&quot;\n                                         \&quot;url_long\&quot;  url}})\n        body (:body jsonStr)\n        jsonBody (json/parse-string body)\n        urls (get jsonBody \&quot;urls\&quot;)\n        short (get urls \&quot;url_short\&quot;)]\n    short))&quot; &quot;(defn shortenUrl [url]\n  (let [jsonStr (client/get \&quot;https://api.weibo.com/2/short_url/shorten.json\&quot;\n                         {:query-params {\&quot;access_token\&quot; \&quot;2.00_hkjqB7sDeMB60016c93a90cPv4H\&quot;\n                                         \&quot;url_long\&quot;  url}})\n        body (:body jsonStr)\n        jsonBody (json/parse-string body)\n        urls (get jsonBody \&quot;urls\&quot;)\n        short (get urls \&quot;url_short\&quot;)]\n    urls))&quot; &quot;(defn shortenUrl [url]\n  (let [jsonStr (client/get \&quot;https://api.weibo.com/2/short_url/shorten.json\&quot;\n                         {:query-params {\&quot;access_token\&quot; \&quot;2.00_hkjqB7sDeMB60016c93a90cPv4H\&quot;\n                                         \&quot;url_long\&quot;  url}})\n        body (:body jsonStr)\n        jsonBody (json/parse-string body)\n        urls (get (get jsonBody \&quot;urls\&quot;) 0) \n        short (get urls \&quot;url_short\&quot;)]\n    short))&quot; &quot;(defn make-app []\n  (let [str1 (slurp room-num-path)\n        num (read-string str1)\n        apk-path (make-app-of-num num)]\n    (spit room-num-path (str (inc num)))\n    (let [apk-url (str \&quot;http://114.215.107.217:8080/apk/\&quot; apk-path)]\n      (shortenUrl apk-url))))&quot; &quot;(defn shortenUrl [url]\n  (let [jsonStr (client/get \&quot;https://api.weibo.com/2/short_url/shorten.json\&quot;\n                            {:query-params {\&quot;access_token\&quot; \&quot;2.00_hkjqB7sDeMB60016c93a90cPv4H\&quot;\n                                            \&quot;url_long\&quot;  url}})\n        body (:body jsonStr)\n        jsonBody (json/read-str body)\n        urls (get (get jsonBody \&quot;urls\&quot;) 0)\n        short (get urls \&quot;url_short\&quot;)]\n    short))&quot; &quot;(defn shortenUrl [url]\n  (client/get \&quot;https://api.weibo.com/2/short_url/shorten.json\&quot;\n              {:access_token \&quot;2.00_hkjqB7sDeMB60016c93a90cPv4H\&quot;\n               :url_long \&quot;http://www.baidu.com\&quot;}))&quot; &quot;(defn shortenUrl [url]\n  (client/get \&quot;https://api.weibo.com/2/short_url/shorten.json\&quot;\n              {:query-params {\&quot;access_token\&quot; \&quot;2.00_hkjqB7sDeMB60016c93a90cPv4H\&quot;\n                              \&quot;url_long\&quot;  url}}))&quot; &quot;(shortenUrl \&quot;http://www.baidu.com\&quot;)&quot; &quot;(defn init []\n  (if-not (.exists (java.io.File. room-num-path))\n    (spit room-num-path (str 2))))&quot; &quot;(defn init []\n  (let [file (java.io.File. room-num-path)]\n    (set! room-num-path)\n    (if-not (.exists file)\n      (spit room-num-path (str 2)))))&quot; &quot;(defn init []\n  (let [file (java.io.File. room-num-path)]\n    (set! room-num-path (.getAbsolutePath file))\n    (if-not (.exists file)\n      (spit room-num-path (str 2)))))&quot; &quot;(defn init []\n  (let [file (java.io.File. room-num-path)]\n    (def room-num-path (.getAbsolutePath file))\n    (if-not (.exists file)\n      (spit room-num-path (str 2)))))&quot; &quot;(init)&quot; &quot;room-num-path&quot; &quot;(.stop @server)&quot; &quot;(make-app)&quot; &quot;(defn make-app-of-num [num]\n  (let [outputApk (str (encode num) \&quot;.apk\&quot;)\n        output-path (str output-dir \&quot;/\&quot; outputApk)]\n    (spit apkRoomPath (md5-encode num))\n    (let [{:keys [exit]}\n          (clojure.java.shell/sh \&quot;ant\&quot; \&quot;release\&quot; \&quot;-buildfile\&quot; (str work-dir \&quot;/build.xml\&quot;))]\n      (if (zero? exit)\n        (let [apkFile (java.io.File. (str work-dir \&quot;/bin/lzw_chat-release.apk\&quot;))\n              outputFile (java.io.File. output-path)\n              output-dir-file (java.io.File. output-dir)]\n          (if-not (.exists output-dir-file)\n            (.mkdirs output-dir-file))\n          (println (.renameTo apkFile outputFile))\n          (spit room-num-path (str (+ num 1)))\n          outputApk)\n        \&quot;error\&quot;))))&quot; &quot;(defn make-app []\n  (let [str1 (slurp room-num-path)\n        num (read-string str1)\n        apk-path (make-app-of-num num)]\n    (spit room-num-path (str (inc num)))\n    apk-path))&quot; &quot;(-main)&quot;], :remote []}}</component>
</project>

